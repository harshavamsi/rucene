<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="322064"><g><title>_int_free (33 samples, 0.01%)</title><rect x="0.0096%" y="389" width="0.0102%" height="15" fill="rgb(227,0,7)" fg:x="31" fg:w="33"/><text x="0.2596%" y="399.50"></text></g><g><title>__GI_madvise (33 samples, 0.01%)</title><rect x="0.0096%" y="373" width="0.0102%" height="15" fill="rgb(217,0,24)" fg:x="31" fg:w="33"/><text x="0.2596%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="0.0096%" y="357" width="0.0102%" height="15" fill="rgb(221,193,54)" fg:x="31" fg:w="33"/><text x="0.2596%" y="367.50"></text></g><g><title>[basic_points_qps] (43 samples, 0.01%)</title><rect x="0.0093%" y="405" width="0.0134%" height="15" fill="rgb(248,212,6)" fg:x="30" fg:w="43"/><text x="0.2593%" y="415.50"></text></g><g><title>[unknown] (72 samples, 0.02%)</title><rect x="0.0227%" y="405" width="0.0224%" height="15" fill="rgb(208,68,35)" fg:x="73" fg:w="72"/><text x="0.2727%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (148 samples, 0.05%)</title><rect x="0.3431%" y="325" width="0.0460%" height="15" fill="rgb(232,128,0)" fg:x="1105" fg:w="148"/><text x="0.5931%" y="335.50"></text></g><g><title>__GI___libc_malloc (136 samples, 0.04%)</title><rect x="0.3468%" y="309" width="0.0422%" height="15" fill="rgb(207,160,47)" fg:x="1117" fg:w="136"/><text x="0.5968%" y="319.50"></text></g><g><title>_int_malloc (121 samples, 0.04%)</title><rect x="0.3515%" y="293" width="0.0376%" height="15" fill="rgb(228,23,34)" fg:x="1132" fg:w="121"/><text x="0.6015%" y="303.50"></text></g><g><title>&lt;rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt; as rucene::core::index::reader::leaf_reader::LeafReader&gt;::live_docs (45 samples, 0.01%)</title><rect x="0.3891%" y="325" width="0.0140%" height="15" fill="rgb(218,30,26)" fg:x="1253" fg:w="45"/><text x="0.6391%" y="335.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeQuery as rucene::core::search::query::Query&lt;C&gt;&gt;::create_weight (40 samples, 0.01%)</title><rect x="0.4030%" y="325" width="0.0124%" height="15" fill="rgb(220,122,19)" fg:x="1298" fg:w="40"/><text x="0.6530%" y="335.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::doc_count (192 samples, 0.06%)</title><rect x="0.4558%" y="309" width="0.0596%" height="15" fill="rgb(250,228,42)" fg:x="1468" fg:w="192"/><text x="0.7058%" y="319.50"></text></g><g><title>rucene::core::codec::points::points_reader::Lucene60PointsReader::bkd_reader (164 samples, 0.05%)</title><rect x="0.4645%" y="293" width="0.0509%" height="15" fill="rgb(240,193,28)" fg:x="1496" fg:w="164"/><text x="0.7145%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (59 samples, 0.02%)</title><rect x="0.4971%" y="277" width="0.0183%" height="15" fill="rgb(216,20,37)" fg:x="1601" fg:w="59"/><text x="0.7471%" y="287.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::max_packed_value (59 samples, 0.02%)</title><rect x="0.5154%" y="309" width="0.0183%" height="15" fill="rgb(206,188,39)" fg:x="1660" fg:w="59"/><text x="0.7654%" y="319.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::min_packed_value (100 samples, 0.03%)</title><rect x="0.5337%" y="309" width="0.0310%" height="15" fill="rgb(217,207,13)" fg:x="1719" fg:w="100"/><text x="0.7837%" y="319.50"></text></g><g><title>rucene::core::codec::points::points_reader::Lucene60PointsReader::bkd_reader (43 samples, 0.01%)</title><rect x="0.5514%" y="293" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="1776" fg:w="43"/><text x="0.8014%" y="303.50"></text></g><g><title>&lt;rucene::core::codec::points::points_reader::Lucene60PointsReader as rucene::core::codec::points::point_values::PointValues&gt;::size (43 samples, 0.01%)</title><rect x="0.5648%" y="309" width="0.0134%" height="15" fill="rgb(225,20,46)" fg:x="1819" fg:w="43"/><text x="0.8148%" y="319.50"></text></g><g><title>&lt;rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt; as rucene::core::index::reader::leaf_reader::LeafReader&gt;::point_values (246 samples, 0.08%)</title><rect x="0.5881%" y="309" width="0.0764%" height="15" fill="rgb(210,31,41)" fg:x="1894" fg:w="246"/><text x="0.8381%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (40 samples, 0.01%)</title><rect x="0.7179%" y="293" width="0.0124%" height="15" fill="rgb(221,200,47)" fg:x="2312" fg:w="40"/><text x="0.9679%" y="303.50"></text></g><g><title>rucene::core::codec::field_infos::FieldInfos::field_info_by_name (210 samples, 0.07%)</title><rect x="0.6912%" y="309" width="0.0652%" height="15" fill="rgb(226,26,5)" fg:x="2226" fg:w="210"/><text x="0.9412%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (84 samples, 0.03%)</title><rect x="0.7303%" y="293" width="0.0261%" height="15" fill="rgb(249,33,26)" fg:x="2352" fg:w="84"/><text x="0.9803%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 samples, 0.02%)</title><rect x="0.7396%" y="277" width="0.0168%" height="15" fill="rgb(235,183,28)" fg:x="2382" fg:w="54"/><text x="0.9896%" y="287.50"></text></g><g><title>&lt;rucene::core::store::io::mmap_index_input::MmapIndexInput as rucene::core::store::io::index_input::IndexInput&gt;::clone (56 samples, 0.02%)</title><rect x="0.7943%" y="293" width="0.0174%" height="15" fill="rgb(221,5,38)" fg:x="2558" fg:w="56"/><text x="1.0443%" y="303.50"></text></g><g><title>__memset_avx2_erms (63 samples, 0.02%)</title><rect x="0.8427%" y="277" width="0.0196%" height="15" fill="rgb(247,18,42)" fg:x="2714" fg:w="63"/><text x="1.0927%" y="287.50"></text></g><g><title>__calloc (279 samples, 0.09%)</title><rect x="0.8172%" y="293" width="0.0866%" height="15" fill="rgb(241,131,45)" fg:x="2632" fg:w="279"/><text x="1.0672%" y="303.50"></text></g><g><title>_int_malloc (134 samples, 0.04%)</title><rect x="0.8623%" y="277" width="0.0416%" height="15" fill="rgb(249,31,29)" fg:x="2777" fg:w="134"/><text x="1.1123%" y="287.50"></text></g><g><title>__GI___libc_free (99 samples, 0.03%)</title><rect x="0.9554%" y="261" width="0.0307%" height="15" fill="rgb(225,111,53)" fg:x="3077" fg:w="99"/><text x="1.2054%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::util::bkd::bkd_reader::IntersectState&lt;rucene::core::util::bkd::bkd_reader::StubIntersectVisitor&gt;&gt; (410 samples, 0.13%)</title><rect x="0.9160%" y="293" width="0.1273%" height="15" fill="rgb(238,160,17)" fg:x="2950" fg:w="410"/><text x="1.1660%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree&gt; (324 samples, 0.10%)</title><rect x="0.9427%" y="277" width="0.1006%" height="15" fill="rgb(214,148,48)" fg:x="3036" fg:w="324"/><text x="1.1927%" y="287.50"></text></g><g><title>_int_free (169 samples, 0.05%)</title><rect x="0.9908%" y="261" width="0.0525%" height="15" fill="rgb(232,36,49)" fg:x="3191" fg:w="169"/><text x="1.2408%" y="271.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.01%)</title><rect x="1.0737%" y="261" width="0.0124%" height="15" fill="rgb(209,103,24)" fg:x="3458" fg:w="40"/><text x="1.3237%" y="271.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (110 samples, 0.03%)</title><rect x="1.0675%" y="277" width="0.0342%" height="15" fill="rgb(229,88,8)" fg:x="3438" fg:w="110"/><text x="1.3175%" y="287.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (36 samples, 0.01%)</title><rect x="1.0905%" y="261" width="0.0112%" height="15" fill="rgb(213,181,19)" fg:x="3512" fg:w="36"/><text x="1.3405%" y="271.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (67 samples, 0.02%)</title><rect x="1.1016%" y="277" width="0.0208%" height="15" fill="rgb(254,191,54)" fg:x="3548" fg:w="67"/><text x="1.3516%" y="287.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (38 samples, 0.01%)</title><rect x="1.1106%" y="261" width="0.0118%" height="15" fill="rgb(241,83,37)" fg:x="3577" fg:w="38"/><text x="1.3606%" y="271.50"></text></g><g><title>__GI___libc_malloc (112 samples, 0.03%)</title><rect x="1.1262%" y="261" width="0.0348%" height="15" fill="rgb(233,36,39)" fg:x="3627" fg:w="112"/><text x="1.3762%" y="271.50"></text></g><g><title>_int_malloc (89 samples, 0.03%)</title><rect x="1.1333%" y="245" width="0.0276%" height="15" fill="rgb(226,3,54)" fg:x="3650" fg:w="89"/><text x="1.3833%" y="255.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_dim_value (125 samples, 0.04%)</title><rect x="1.1249%" y="277" width="0.0388%" height="15" fill="rgb(245,192,40)" fg:x="3623" fg:w="125"/><text x="1.3749%" y="287.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (42 samples, 0.01%)</title><rect x="1.1637%" y="277" width="0.0130%" height="15" fill="rgb(238,167,29)" fg:x="3748" fg:w="42"/><text x="1.4137%" y="287.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.01%)</title><rect x="1.2119%" y="245" width="0.0106%" height="15" fill="rgb(232,182,51)" fg:x="3903" fg:w="34"/><text x="1.4619%" y="255.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (107 samples, 0.03%)</title><rect x="1.2081%" y="261" width="0.0332%" height="15" fill="rgb(231,60,39)" fg:x="3891" fg:w="107"/><text x="1.4581%" y="271.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (46 samples, 0.01%)</title><rect x="1.2271%" y="245" width="0.0143%" height="15" fill="rgb(208,69,12)" fg:x="3952" fg:w="46"/><text x="1.4771%" y="255.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (65 samples, 0.02%)</title><rect x="1.2414%" y="261" width="0.0202%" height="15" fill="rgb(235,93,37)" fg:x="3998" fg:w="65"/><text x="1.4914%" y="271.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (42 samples, 0.01%)</title><rect x="1.2485%" y="245" width="0.0130%" height="15" fill="rgb(213,116,39)" fg:x="4021" fg:w="42"/><text x="1.4985%" y="255.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.01%)</title><rect x="1.2712%" y="245" width="0.0118%" height="15" fill="rgb(222,207,29)" fg:x="4094" fg:w="38"/><text x="1.5212%" y="255.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (43 samples, 0.01%)</title><rect x="1.2699%" y="261" width="0.0134%" height="15" fill="rgb(206,96,30)" fg:x="4090" fg:w="43"/><text x="1.5199%" y="271.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (96 samples, 0.03%)</title><rect x="1.3122%" y="245" width="0.0298%" height="15" fill="rgb(218,138,4)" fg:x="4226" fg:w="96"/><text x="1.5622%" y="255.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (54 samples, 0.02%)</title><rect x="1.3252%" y="229" width="0.0168%" height="15" fill="rgb(250,191,14)" fg:x="4268" fg:w="54"/><text x="1.5752%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (63 samples, 0.02%)</title><rect x="1.3420%" y="245" width="0.0196%" height="15" fill="rgb(239,60,40)" fg:x="4322" fg:w="63"/><text x="1.5920%" y="255.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (44 samples, 0.01%)</title><rect x="1.3479%" y="229" width="0.0137%" height="15" fill="rgb(206,27,48)" fg:x="4341" fg:w="44"/><text x="1.5979%" y="239.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (40 samples, 0.01%)</title><rect x="1.3668%" y="245" width="0.0124%" height="15" fill="rgb(225,35,8)" fg:x="4402" fg:w="40"/><text x="1.6168%" y="255.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.01%)</title><rect x="1.4075%" y="213" width="0.0109%" height="15" fill="rgb(250,213,24)" fg:x="4533" fg:w="35"/><text x="1.6575%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (104 samples, 0.03%)</title><rect x="1.4044%" y="229" width="0.0323%" height="15" fill="rgb(247,123,22)" fg:x="4523" fg:w="104"/><text x="1.6544%" y="239.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (45 samples, 0.01%)</title><rect x="1.4227%" y="213" width="0.0140%" height="15" fill="rgb(231,138,38)" fg:x="4582" fg:w="45"/><text x="1.6727%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (78 samples, 0.02%)</title><rect x="1.4367%" y="229" width="0.0242%" height="15" fill="rgb(231,145,46)" fg:x="4627" fg:w="78"/><text x="1.6867%" y="239.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (57 samples, 0.02%)</title><rect x="1.4432%" y="213" width="0.0177%" height="15" fill="rgb(251,118,11)" fg:x="4648" fg:w="57"/><text x="1.6932%" y="223.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (34 samples, 0.01%)</title><rect x="1.4932%" y="213" width="0.0106%" height="15" fill="rgb(217,147,25)" fg:x="4809" fg:w="34"/><text x="1.7432%" y="223.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (99 samples, 0.03%)</title><rect x="1.5065%" y="213" width="0.0307%" height="15" fill="rgb(247,81,37)" fg:x="4852" fg:w="99"/><text x="1.7565%" y="223.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (50 samples, 0.02%)</title><rect x="1.5217%" y="197" width="0.0155%" height="15" fill="rgb(209,12,38)" fg:x="4901" fg:w="50"/><text x="1.7717%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (85 samples, 0.03%)</title><rect x="1.5373%" y="213" width="0.0264%" height="15" fill="rgb(227,1,9)" fg:x="4951" fg:w="85"/><text x="1.7873%" y="223.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (64 samples, 0.02%)</title><rect x="1.5438%" y="197" width="0.0199%" height="15" fill="rgb(248,47,43)" fg:x="4972" fg:w="64"/><text x="1.7938%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (34 samples, 0.01%)</title><rect x="1.5699%" y="213" width="0.0106%" height="15" fill="rgb(221,10,30)" fg:x="5056" fg:w="34"/><text x="1.8199%" y="223.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (1,149 samples, 0.36%)</title><rect x="1.7220%" y="85" width="0.3568%" height="15" fill="rgb(210,229,1)" fg:x="5546" fg:w="1149"/><text x="1.9720%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (2,275 samples, 0.71%)</title><rect x="1.6379%" y="101" width="0.7064%" height="15" fill="rgb(222,148,37)" fg:x="5275" fg:w="2275"/><text x="1.8879%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (855 samples, 0.27%)</title><rect x="2.0788%" y="85" width="0.2655%" height="15" fill="rgb(234,67,33)" fg:x="6695" fg:w="855"/><text x="2.3288%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (249 samples, 0.08%)</title><rect x="2.2669%" y="69" width="0.0773%" height="15" fill="rgb(247,98,35)" fg:x="7301" fg:w="249"/><text x="2.5169%" y="79.50"></text></g><g><title>__memset_avx2_erms (87 samples, 0.03%)</title><rect x="2.3557%" y="69" width="0.0270%" height="15" fill="rgb(247,138,52)" fg:x="7587" fg:w="87"/><text x="2.6057%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (2,492 samples, 0.77%)</title><rect x="1.6292%" y="117" width="0.7738%" height="15" fill="rgb(213,79,30)" fg:x="5247" fg:w="2492"/><text x="1.8792%" y="127.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (189 samples, 0.06%)</title><rect x="2.3443%" y="101" width="0.0587%" height="15" fill="rgb(246,177,23)" fg:x="7550" fg:w="189"/><text x="2.5943%" y="111.50"></text></g><g><title>__calloc (155 samples, 0.05%)</title><rect x="2.3548%" y="85" width="0.0481%" height="15" fill="rgb(230,62,27)" fg:x="7584" fg:w="155"/><text x="2.6048%" y="95.50"></text></g><g><title>_int_malloc (65 samples, 0.02%)</title><rect x="2.3828%" y="69" width="0.0202%" height="15" fill="rgb(216,154,8)" fg:x="7674" fg:w="65"/><text x="2.6328%" y="79.50"></text></g><g><title>sysmalloc (63 samples, 0.02%)</title><rect x="2.3834%" y="53" width="0.0196%" height="15" fill="rgb(244,35,45)" fg:x="7676" fg:w="63"/><text x="2.6334%" y="63.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (443 samples, 0.14%)</title><rect x="2.4377%" y="101" width="0.1376%" height="15" fill="rgb(251,115,12)" fg:x="7851" fg:w="443"/><text x="2.6877%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (885 samples, 0.27%)</title><rect x="2.4029%" y="117" width="0.2748%" height="15" fill="rgb(240,54,50)" fg:x="7739" fg:w="885"/><text x="2.6529%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (330 samples, 0.10%)</title><rect x="2.5753%" y="101" width="0.1025%" height="15" fill="rgb(233,84,52)" fg:x="8294" fg:w="330"/><text x="2.8253%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (82 samples, 0.03%)</title><rect x="2.6523%" y="85" width="0.0255%" height="15" fill="rgb(207,117,47)" fg:x="8542" fg:w="82"/><text x="2.9023%" y="95.50"></text></g><g><title>__memset_avx2_erms (48 samples, 0.01%)</title><rect x="2.6815%" y="85" width="0.0149%" height="15" fill="rgb(249,43,39)" fg:x="8636" fg:w="48"/><text x="2.9315%" y="95.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,559 samples, 1.11%)</title><rect x="1.5956%" y="213" width="1.1051%" height="15" fill="rgb(209,38,44)" fg:x="5139" fg:w="3559"/><text x="1.8456%" y="223.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,556 samples, 1.10%)</title><rect x="1.5966%" y="197" width="1.1041%" height="15" fill="rgb(236,212,23)" fg:x="5142" fg:w="3556"/><text x="1.8466%" y="207.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,551 samples, 1.10%)</title><rect x="1.5981%" y="181" width="1.1026%" height="15" fill="rgb(242,79,21)" fg:x="5147" fg:w="3551"/><text x="1.8481%" y="191.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,541 samples, 1.10%)</title><rect x="1.6012%" y="165" width="1.0995%" height="15" fill="rgb(211,96,35)" fg:x="5157" fg:w="3541"/><text x="1.8512%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,528 samples, 1.10%)</title><rect x="1.6053%" y="149" width="1.0954%" height="15" fill="rgb(253,215,40)" fg:x="5170" fg:w="3528"/><text x="1.8553%" y="159.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,485 samples, 1.08%)</title><rect x="1.6186%" y="133" width="1.0821%" height="15" fill="rgb(211,81,21)" fg:x="5213" fg:w="3485"/><text x="1.8686%" y="143.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (74 samples, 0.02%)</title><rect x="2.6777%" y="117" width="0.0230%" height="15" fill="rgb(208,190,38)" fg:x="8624" fg:w="74"/><text x="2.9277%" y="127.50"></text></g><g><title>__calloc (62 samples, 0.02%)</title><rect x="2.6815%" y="101" width="0.0193%" height="15" fill="rgb(235,213,38)" fg:x="8636" fg:w="62"/><text x="2.9315%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (43 samples, 0.01%)</title><rect x="2.7237%" y="197" width="0.0134%" height="15" fill="rgb(237,122,38)" fg:x="8772" fg:w="43"/><text x="2.9737%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (76 samples, 0.02%)</title><rect x="2.7373%" y="197" width="0.0236%" height="15" fill="rgb(244,218,35)" fg:x="8816" fg:w="76"/><text x="2.9873%" y="207.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (42 samples, 0.01%)</title><rect x="2.7479%" y="181" width="0.0130%" height="15" fill="rgb(240,68,47)" fg:x="8850" fg:w="42"/><text x="2.9979%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (90 samples, 0.03%)</title><rect x="2.7609%" y="197" width="0.0279%" height="15" fill="rgb(210,16,53)" fg:x="8892" fg:w="90"/><text x="3.0109%" y="207.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (61 samples, 0.02%)</title><rect x="2.7699%" y="181" width="0.0189%" height="15" fill="rgb(235,124,12)" fg:x="8921" fg:w="61"/><text x="3.0199%" y="191.50"></text></g><g><title>__GI___libc_malloc (33 samples, 0.01%)</title><rect x="2.7970%" y="181" width="0.0102%" height="15" fill="rgb(224,169,11)" fg:x="9008" fg:w="33"/><text x="3.0470%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (38 samples, 0.01%)</title><rect x="2.7960%" y="197" width="0.0118%" height="15" fill="rgb(250,166,2)" fg:x="9005" fg:w="38"/><text x="3.0460%" y="207.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (48 samples, 0.01%)</title><rect x="2.8479%" y="149" width="0.0149%" height="15" fill="rgb(242,216,29)" fg:x="9172" fg:w="48"/><text x="3.0979%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (56 samples, 0.02%)</title><rect x="2.8628%" y="149" width="0.0174%" height="15" fill="rgb(230,116,27)" fg:x="9220" fg:w="56"/><text x="3.1128%" y="159.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (33 samples, 0.01%)</title><rect x="2.8699%" y="133" width="0.0102%" height="15" fill="rgb(228,99,48)" fg:x="9243" fg:w="33"/><text x="3.1199%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (85 samples, 0.03%)</title><rect x="2.8827%" y="133" width="0.0264%" height="15" fill="rgb(253,11,6)" fg:x="9284" fg:w="85"/><text x="3.1327%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (40 samples, 0.01%)</title><rect x="2.8966%" y="117" width="0.0124%" height="15" fill="rgb(247,143,39)" fg:x="9329" fg:w="40"/><text x="3.1466%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (99 samples, 0.03%)</title><rect x="2.9090%" y="133" width="0.0307%" height="15" fill="rgb(236,97,10)" fg:x="9369" fg:w="99"/><text x="3.1590%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (54 samples, 0.02%)</title><rect x="2.9230%" y="117" width="0.0168%" height="15" fill="rgb(233,208,19)" fg:x="9414" fg:w="54"/><text x="3.1730%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::pop (44 samples, 0.01%)</title><rect x="2.9485%" y="117" width="0.0137%" height="15" fill="rgb(216,164,2)" fg:x="9496" fg:w="44"/><text x="3.1985%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (73 samples, 0.02%)</title><rect x="2.9621%" y="117" width="0.0227%" height="15" fill="rgb(220,129,5)" fg:x="9540" fg:w="73"/><text x="3.2121%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (98 samples, 0.03%)</title><rect x="2.9848%" y="117" width="0.0304%" height="15" fill="rgb(242,17,10)" fg:x="9613" fg:w="98"/><text x="3.2348%" y="127.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (37 samples, 0.01%)</title><rect x="3.0038%" y="101" width="0.0115%" height="15" fill="rgb(242,107,0)" fg:x="9674" fg:w="37"/><text x="3.2538%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (174 samples, 0.05%)</title><rect x="3.0441%" y="101" width="0.0540%" height="15" fill="rgb(251,28,31)" fg:x="9804" fg:w="174"/><text x="3.2941%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (9,027 samples, 2.80%)</title><rect x="3.7570%" y="85" width="2.8029%" height="15" fill="rgb(233,223,10)" fg:x="12100" fg:w="9027"/><text x="4.0070%" y="95.50">&lt;r..</text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (18,271 samples, 5.67%)</title><rect x="3.0981%" y="101" width="5.6731%" height="15" fill="rgb(215,21,27)" fg:x="9978" fg:w="18271"/><text x="3.3481%" y="111.50">rucene:..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (7,121 samples, 2.21%)</title><rect x="6.5602%" y="85" width="2.2111%" height="15" fill="rgb(232,23,21)" fg:x="21128" fg:w="7121"/><text x="6.8102%" y="95.50">r..</text></g><g><title>__memmove_avx_unaligned_erms (1,862 samples, 0.58%)</title><rect x="8.1931%" y="69" width="0.5781%" height="15" fill="rgb(244,5,23)" fg:x="26387" fg:w="1862"/><text x="8.4431%" y="79.50"></text></g><g><title>__memset_avx2_erms (551 samples, 0.17%)</title><rect x="8.8240%" y="69" width="0.1711%" height="15" fill="rgb(226,81,46)" fg:x="28419" fg:w="551"/><text x="9.0740%" y="79.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="8.9740%" y="53" width="0.0211%" height="15" fill="rgb(247,70,30)" fg:x="28902" fg:w="68"/><text x="9.2240%" y="63.50"></text></g><g><title>__calloc (855 samples, 0.27%)</title><rect x="8.8222%" y="85" width="0.2655%" height="15" fill="rgb(212,68,19)" fg:x="28413" fg:w="855"/><text x="9.0722%" y="95.50"></text></g><g><title>_int_malloc (295 samples, 0.09%)</title><rect x="8.9960%" y="69" width="0.0916%" height="15" fill="rgb(240,187,13)" fg:x="28973" fg:w="295"/><text x="9.2460%" y="79.50"></text></g><g><title>sysmalloc (291 samples, 0.09%)</title><rect x="8.9973%" y="53" width="0.0904%" height="15" fill="rgb(223,113,26)" fg:x="28977" fg:w="291"/><text x="9.2473%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (19,551 samples, 6.07%)</title><rect x="3.0180%" y="117" width="6.0705%" height="15" fill="rgb(206,192,2)" fg:x="9720" fg:w="19551"/><text x="3.2680%" y="127.50">rucene::..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (1,022 samples, 0.32%)</title><rect x="8.7712%" y="101" width="0.3173%" height="15" fill="rgb(241,108,4)" fg:x="28249" fg:w="1022"/><text x="9.0212%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (597 samples, 0.19%)</title><rect x="9.1296%" y="101" width="0.1854%" height="15" fill="rgb(247,173,49)" fg:x="29403" fg:w="597"/><text x="9.3796%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (1,228 samples, 0.38%)</title><rect x="9.0886%" y="117" width="0.3813%" height="15" fill="rgb(224,114,35)" fg:x="29271" fg:w="1228"/><text x="9.3386%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (499 samples, 0.15%)</title><rect x="9.3149%" y="101" width="0.1549%" height="15" fill="rgb(245,159,27)" fg:x="30000" fg:w="499"/><text x="9.5649%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (155 samples, 0.05%)</title><rect x="9.4217%" y="85" width="0.0481%" height="15" fill="rgb(245,172,44)" fg:x="30344" fg:w="155"/><text x="9.6717%" y="95.50"></text></g><g><title>__memset_avx2_erms (71 samples, 0.02%)</title><rect x="9.4801%" y="85" width="0.0220%" height="15" fill="rgb(236,23,11)" fg:x="30532" fg:w="71"/><text x="9.7301%" y="95.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (21,548 samples, 6.69%)</title><rect x="2.8234%" y="197" width="6.6906%" height="15" fill="rgb(205,117,38)" fg:x="9093" fg:w="21548"/><text x="3.0734%" y="207.50">rucene::c..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (21,523 samples, 6.68%)</title><rect x="2.8311%" y="181" width="6.6828%" height="15" fill="rgb(237,72,25)" fg:x="9118" fg:w="21523"/><text x="3.0811%" y="191.50">rucene::c..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (21,478 samples, 6.67%)</title><rect x="2.8451%" y="165" width="6.6689%" height="15" fill="rgb(244,70,9)" fg:x="9163" fg:w="21478"/><text x="3.0951%" y="175.50">rucene::c..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (21,365 samples, 6.63%)</title><rect x="2.8802%" y="149" width="6.6338%" height="15" fill="rgb(217,125,39)" fg:x="9276" fg:w="21365"/><text x="3.1302%" y="159.50">rucene::c..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (21,173 samples, 6.57%)</title><rect x="2.9398%" y="133" width="6.5742%" height="15" fill="rgb(235,36,10)" fg:x="9468" fg:w="21173"/><text x="3.1898%" y="143.50">rucene::c..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (142 samples, 0.04%)</title><rect x="9.4699%" y="117" width="0.0441%" height="15" fill="rgb(251,123,47)" fg:x="30499" fg:w="142"/><text x="9.7199%" y="127.50"></text></g><g><title>__calloc (110 samples, 0.03%)</title><rect x="9.4798%" y="101" width="0.0342%" height="15" fill="rgb(221,13,13)" fg:x="30531" fg:w="110"/><text x="9.7298%" y="111.50"></text></g><g><title>_int_malloc (38 samples, 0.01%)</title><rect x="9.5021%" y="85" width="0.0118%" height="15" fill="rgb(238,131,9)" fg:x="30603" fg:w="38"/><text x="9.7521%" y="95.50"></text></g><g><title>sysmalloc (38 samples, 0.01%)</title><rect x="9.5021%" y="69" width="0.0118%" height="15" fill="rgb(211,50,8)" fg:x="30603" fg:w="38"/><text x="9.7521%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (37 samples, 0.01%)</title><rect x="9.5226%" y="181" width="0.0115%" height="15" fill="rgb(245,182,24)" fg:x="30669" fg:w="37"/><text x="9.7726%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (95 samples, 0.03%)</title><rect x="9.5372%" y="181" width="0.0295%" height="15" fill="rgb(242,14,37)" fg:x="30716" fg:w="95"/><text x="9.7872%" y="191.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (48 samples, 0.01%)</title><rect x="9.5518%" y="165" width="0.0149%" height="15" fill="rgb(246,228,12)" fg:x="30763" fg:w="48"/><text x="9.8018%" y="175.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (93 samples, 0.03%)</title><rect x="9.5667%" y="181" width="0.0289%" height="15" fill="rgb(213,55,15)" fg:x="30811" fg:w="93"/><text x="9.8167%" y="191.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (68 samples, 0.02%)</title><rect x="9.5745%" y="165" width="0.0211%" height="15" fill="rgb(209,9,3)" fg:x="30836" fg:w="68"/><text x="9.8245%" y="175.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.02%)</title><rect x="9.6049%" y="165" width="0.0155%" height="15" fill="rgb(230,59,30)" fg:x="30934" fg:w="50"/><text x="9.8549%" y="175.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (59 samples, 0.02%)</title><rect x="9.6027%" y="181" width="0.0183%" height="15" fill="rgb(209,121,21)" fg:x="30927" fg:w="59"/><text x="9.8527%" y="191.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (45 samples, 0.01%)</title><rect x="9.6515%" y="149" width="0.0140%" height="15" fill="rgb(220,109,13)" fg:x="31084" fg:w="45"/><text x="9.9015%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (37 samples, 0.01%)</title><rect x="9.6655%" y="149" width="0.0115%" height="15" fill="rgb(232,18,1)" fg:x="31129" fg:w="37"/><text x="9.9155%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (58 samples, 0.02%)</title><rect x="9.6788%" y="133" width="0.0180%" height="15" fill="rgb(215,41,42)" fg:x="31172" fg:w="58"/><text x="9.9288%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (94 samples, 0.03%)</title><rect x="9.6968%" y="133" width="0.0292%" height="15" fill="rgb(224,123,36)" fg:x="31230" fg:w="94"/><text x="9.9468%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (53 samples, 0.02%)</title><rect x="9.7096%" y="117" width="0.0165%" height="15" fill="rgb(240,125,3)" fg:x="31271" fg:w="53"/><text x="9.9596%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::pop (39 samples, 0.01%)</title><rect x="9.7338%" y="117" width="0.0121%" height="15" fill="rgb(205,98,50)" fg:x="31349" fg:w="39"/><text x="9.9838%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (56 samples, 0.02%)</title><rect x="9.7459%" y="117" width="0.0174%" height="15" fill="rgb(205,185,37)" fg:x="31388" fg:w="56"/><text x="9.9959%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (88 samples, 0.03%)</title><rect x="9.7633%" y="117" width="0.0273%" height="15" fill="rgb(238,207,15)" fg:x="31444" fg:w="88"/><text x="10.0133%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (171 samples, 0.05%)</title><rect x="9.8071%" y="101" width="0.0531%" height="15" fill="rgb(213,199,42)" fg:x="31585" fg:w="171"/><text x="10.0571%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (8,429 samples, 2.62%)</title><rect x="10.4796%" y="85" width="2.6172%" height="15" fill="rgb(235,201,11)" fg:x="33751" fg:w="8429"/><text x="10.7296%" y="95.50">&lt;r..</text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (17,164 samples, 5.33%)</title><rect x="9.8602%" y="101" width="5.3294%" height="15" fill="rgb(207,46,11)" fg:x="31756" fg:w="17164"/><text x="10.1102%" y="111.50">rucene:..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (6,731 samples, 2.09%)</title><rect x="13.0996%" y="85" width="2.0900%" height="15" fill="rgb(241,35,35)" fg:x="42189" fg:w="6731"/><text x="13.3496%" y="95.50">r..</text></g><g><title>__memmove_avx_unaligned_erms (1,814 samples, 0.56%)</title><rect x="14.6263%" y="69" width="0.5632%" height="15" fill="rgb(243,32,47)" fg:x="47106" fg:w="1814"/><text x="14.8763%" y="79.50"></text></g><g><title>__memset_avx2_erms (1,048 samples, 0.33%)</title><rect x="15.2923%" y="69" width="0.3254%" height="15" fill="rgb(247,202,23)" fg:x="49251" fg:w="1048"/><text x="15.5423%" y="79.50"></text></g><g><title>[unknown] (140 samples, 0.04%)</title><rect x="15.5742%" y="53" width="0.0435%" height="15" fill="rgb(219,102,11)" fg:x="50159" fg:w="140"/><text x="15.8242%" y="63.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="15.7745%" y="37" width="0.0208%" height="15" fill="rgb(243,110,44)" fg:x="50804" fg:w="67"/><text x="16.0245%" y="47.50"></text></g><g><title>__calloc (1,689 samples, 0.52%)</title><rect x="15.2883%" y="85" width="0.5244%" height="15" fill="rgb(222,74,54)" fg:x="49238" fg:w="1689"/><text x="15.5383%" y="95.50"></text></g><g><title>_int_malloc (622 samples, 0.19%)</title><rect x="15.6196%" y="69" width="0.1931%" height="15" fill="rgb(216,99,12)" fg:x="50305" fg:w="622"/><text x="15.8696%" y="79.50"></text></g><g><title>sysmalloc (595 samples, 0.18%)</title><rect x="15.6279%" y="53" width="0.1847%" height="15" fill="rgb(226,22,26)" fg:x="50332" fg:w="595"/><text x="15.8779%" y="63.50"></text></g><g><title>__GI___mprotect (56 samples, 0.02%)</title><rect x="15.7953%" y="37" width="0.0174%" height="15" fill="rgb(217,163,10)" fg:x="50871" fg:w="56"/><text x="16.0453%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (19,400 samples, 6.02%)</title><rect x="9.7915%" y="117" width="6.0236%" height="15" fill="rgb(213,25,53)" fg:x="31535" fg:w="19400"/><text x="10.0415%" y="127.50">rucene::..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (2,015 samples, 0.63%)</title><rect x="15.1895%" y="101" width="0.6257%" height="15" fill="rgb(252,105,26)" fg:x="48920" fg:w="2015"/><text x="15.4395%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (309 samples, 0.10%)</title><rect x="15.8375%" y="101" width="0.0959%" height="15" fill="rgb(220,39,43)" fg:x="51007" fg:w="309"/><text x="16.0875%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (656 samples, 0.20%)</title><rect x="15.8152%" y="117" width="0.2037%" height="15" fill="rgb(229,68,48)" fg:x="50935" fg:w="656"/><text x="16.0652%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (275 samples, 0.09%)</title><rect x="15.9335%" y="101" width="0.0854%" height="15" fill="rgb(252,8,32)" fg:x="51316" fg:w="275"/><text x="16.1835%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (70 samples, 0.02%)</title><rect x="15.9971%" y="85" width="0.0217%" height="15" fill="rgb(223,20,43)" fg:x="51521" fg:w="70"/><text x="16.2471%" y="95.50"></text></g><g><title>__memset_avx2_erms (61 samples, 0.02%)</title><rect x="16.0276%" y="85" width="0.0189%" height="15" fill="rgb(229,81,49)" fg:x="51619" fg:w="61"/><text x="16.2776%" y="95.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (20,686 samples, 6.42%)</title><rect x="9.6354%" y="181" width="6.4229%" height="15" fill="rgb(236,28,36)" fg:x="31032" fg:w="20686"/><text x="9.8854%" y="191.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (20,640 samples, 6.41%)</title><rect x="9.6496%" y="165" width="6.4087%" height="15" fill="rgb(249,185,26)" fg:x="31078" fg:w="20640"/><text x="9.8996%" y="175.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (20,552 samples, 6.38%)</title><rect x="9.6770%" y="149" width="6.3813%" height="15" fill="rgb(249,174,33)" fg:x="31166" fg:w="20552"/><text x="9.9270%" y="159.50">rucene::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (20,394 samples, 6.33%)</title><rect x="9.7260%" y="133" width="6.3323%" height="15" fill="rgb(233,201,37)" fg:x="31324" fg:w="20394"/><text x="9.9760%" y="143.50">rucene::..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (127 samples, 0.04%)</title><rect x="16.0189%" y="117" width="0.0394%" height="15" fill="rgb(221,78,26)" fg:x="51591" fg:w="127"/><text x="16.2689%" y="127.50"></text></g><g><title>__calloc (100 samples, 0.03%)</title><rect x="16.0272%" y="101" width="0.0310%" height="15" fill="rgb(250,127,30)" fg:x="51618" fg:w="100"/><text x="16.2772%" y="111.50"></text></g><g><title>_int_malloc (37 samples, 0.01%)</title><rect x="16.0468%" y="85" width="0.0115%" height="15" fill="rgb(230,49,44)" fg:x="51681" fg:w="37"/><text x="16.2968%" y="95.50"></text></g><g><title>sysmalloc (37 samples, 0.01%)</title><rect x="16.0468%" y="69" width="0.0115%" height="15" fill="rgb(229,67,23)" fg:x="51681" fg:w="37"/><text x="16.2968%" y="79.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (50 samples, 0.02%)</title><rect x="16.0707%" y="165" width="0.0155%" height="15" fill="rgb(249,83,47)" fg:x="51758" fg:w="50"/><text x="16.3207%" y="175.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (108 samples, 0.03%)</title><rect x="16.0878%" y="165" width="0.0335%" height="15" fill="rgb(215,43,3)" fg:x="51813" fg:w="108"/><text x="16.3378%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (49 samples, 0.02%)</title><rect x="16.1061%" y="149" width="0.0152%" height="15" fill="rgb(238,154,13)" fg:x="51872" fg:w="49"/><text x="16.3561%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (115 samples, 0.04%)</title><rect x="16.1213%" y="165" width="0.0357%" height="15" fill="rgb(219,56,2)" fg:x="51921" fg:w="115"/><text x="16.3713%" y="175.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (88 samples, 0.03%)</title><rect x="16.1297%" y="149" width="0.0273%" height="15" fill="rgb(233,0,4)" fg:x="51948" fg:w="88"/><text x="16.3797%" y="159.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.01%)</title><rect x="16.1673%" y="149" width="0.0106%" height="15" fill="rgb(235,30,7)" fg:x="52069" fg:w="34"/><text x="16.4173%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (40 samples, 0.01%)</title><rect x="16.1664%" y="165" width="0.0124%" height="15" fill="rgb(250,79,13)" fg:x="52066" fg:w="40"/><text x="16.4164%" y="175.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (38 samples, 0.01%)</title><rect x="16.1968%" y="149" width="0.0118%" height="15" fill="rgb(211,146,34)" fg:x="52164" fg:w="38"/><text x="16.4468%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (49 samples, 0.02%)</title><rect x="16.2108%" y="133" width="0.0152%" height="15" fill="rgb(228,22,38)" fg:x="52209" fg:w="49"/><text x="16.4608%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (60 samples, 0.02%)</title><rect x="16.2260%" y="133" width="0.0186%" height="15" fill="rgb(235,168,5)" fg:x="52258" fg:w="60"/><text x="16.4760%" y="143.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (35 samples, 0.01%)</title><rect x="16.2337%" y="117" width="0.0109%" height="15" fill="rgb(221,155,16)" fg:x="52283" fg:w="35"/><text x="16.4837%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (35 samples, 0.01%)</title><rect x="16.2555%" y="117" width="0.0109%" height="15" fill="rgb(215,215,53)" fg:x="52353" fg:w="35"/><text x="16.5055%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (47 samples, 0.01%)</title><rect x="16.2663%" y="117" width="0.0146%" height="15" fill="rgb(223,4,10)" fg:x="52388" fg:w="47"/><text x="16.5163%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (98 samples, 0.03%)</title><rect x="16.2933%" y="101" width="0.0304%" height="15" fill="rgb(234,103,6)" fg:x="52475" fg:w="98"/><text x="16.5433%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (5,358 samples, 1.66%)</title><rect x="16.7240%" y="85" width="1.6636%" height="15" fill="rgb(227,97,0)" fg:x="53862" fg:w="5358"/><text x="16.9740%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (10,974 samples, 3.41%)</title><rect x="16.3238%" y="101" width="3.4074%" height="15" fill="rgb(234,150,53)" fg:x="52573" fg:w="10974"/><text x="16.5738%" y="111.50">ruc..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (4,321 samples, 1.34%)</title><rect x="18.3895%" y="85" width="1.3417%" height="15" fill="rgb(228,201,54)" fg:x="59226" fg:w="4321"/><text x="18.6395%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,149 samples, 0.36%)</title><rect x="19.3744%" y="69" width="0.3568%" height="15" fill="rgb(222,22,37)" fg:x="62398" fg:w="1149"/><text x="19.6244%" y="79.50"></text></g><g><title>__memset_avx2_erms (2,309 samples, 0.72%)</title><rect x="19.9411%" y="69" width="0.7169%" height="15" fill="rgb(237,53,32)" fg:x="64223" fg:w="2309"/><text x="20.1911%" y="79.50"></text></g><g><title>[unknown] (321 samples, 0.10%)</title><rect x="20.5583%" y="53" width="0.0997%" height="15" fill="rgb(233,25,53)" fg:x="66211" fg:w="321"/><text x="20.8083%" y="63.50"></text></g><g><title>[unknown] (161 samples, 0.05%)</title><rect x="21.0188%" y="37" width="0.0500%" height="15" fill="rgb(210,40,34)" fg:x="67694" fg:w="161"/><text x="21.2688%" y="47.50"></text></g><g><title>__calloc (3,704 samples, 1.15%)</title><rect x="19.9345%" y="85" width="1.1501%" height="15" fill="rgb(241,220,44)" fg:x="64202" fg:w="3704"/><text x="20.1845%" y="95.50"></text></g><g><title>_int_malloc (1,372 samples, 0.43%)</title><rect x="20.6586%" y="69" width="0.4260%" height="15" fill="rgb(235,28,35)" fg:x="66534" fg:w="1372"/><text x="20.9086%" y="79.50"></text></g><g><title>sysmalloc (1,356 samples, 0.42%)</title><rect x="20.6636%" y="53" width="0.4210%" height="15" fill="rgb(210,56,17)" fg:x="66550" fg:w="1356"/><text x="20.9136%" y="63.50"></text></g><g><title>__GI___mprotect (51 samples, 0.02%)</title><rect x="21.0688%" y="37" width="0.0158%" height="15" fill="rgb(224,130,29)" fg:x="67855" fg:w="51"/><text x="21.3188%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (15,480 samples, 4.81%)</title><rect x="16.2822%" y="117" width="4.8065%" height="15" fill="rgb(235,212,8)" fg:x="52439" fg:w="15480"/><text x="16.5322%" y="127.50">rucene..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (4,372 samples, 1.36%)</title><rect x="19.7312%" y="101" width="1.3575%" height="15" fill="rgb(223,33,50)" fg:x="63547" fg:w="4372"/><text x="19.9812%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (171 samples, 0.05%)</title><rect x="21.1026%" y="101" width="0.0531%" height="15" fill="rgb(219,149,13)" fg:x="67964" fg:w="171"/><text x="21.3526%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (355 samples, 0.11%)</title><rect x="21.0887%" y="117" width="0.1102%" height="15" fill="rgb(250,156,29)" fg:x="67919" fg:w="355"/><text x="21.3387%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (139 samples, 0.04%)</title><rect x="21.1557%" y="101" width="0.0432%" height="15" fill="rgb(216,193,19)" fg:x="68135" fg:w="139"/><text x="21.4057%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (39 samples, 0.01%)</title><rect x="21.1868%" y="85" width="0.0121%" height="15" fill="rgb(216,135,14)" fg:x="68235" fg:w="39"/><text x="21.4368%" y="95.50"></text></g><g><title>__memset_avx2_erms (319 samples, 0.10%)</title><rect x="21.2271%" y="85" width="0.0990%" height="15" fill="rgb(241,47,5)" fg:x="68365" fg:w="319"/><text x="21.4771%" y="95.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="21.3104%" y="69" width="0.0158%" height="15" fill="rgb(233,42,35)" fg:x="68633" fg:w="51"/><text x="21.5604%" y="79.50"></text></g><g><title>__calloc (508 samples, 0.16%)</title><rect x="21.2268%" y="101" width="0.1577%" height="15" fill="rgb(231,13,6)" fg:x="68364" fg:w="508"/><text x="21.4768%" y="111.50"></text></g><g><title>_int_malloc (188 samples, 0.06%)</title><rect x="21.3262%" y="85" width="0.0584%" height="15" fill="rgb(207,181,40)" fg:x="68684" fg:w="188"/><text x="21.5762%" y="95.50"></text></g><g><title>sysmalloc (178 samples, 0.06%)</title><rect x="21.3293%" y="69" width="0.0553%" height="15" fill="rgb(254,173,49)" fg:x="68694" fg:w="178"/><text x="21.5793%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (16,735 samples, 5.20%)</title><rect x="16.1896%" y="165" width="5.1962%" height="15" fill="rgb(221,1,38)" fg:x="52141" fg:w="16735"/><text x="16.4396%" y="175.50">rucene..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (16,674 samples, 5.18%)</title><rect x="16.2086%" y="149" width="5.1772%" height="15" fill="rgb(206,124,46)" fg:x="52202" fg:w="16674"/><text x="16.4586%" y="159.50">rucene..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (16,558 samples, 5.14%)</title><rect x="16.2446%" y="133" width="5.1412%" height="15" fill="rgb(249,21,11)" fg:x="52318" fg:w="16558"/><text x="16.4946%" y="143.50">rucene..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (602 samples, 0.19%)</title><rect x="21.1989%" y="117" width="0.1869%" height="15" fill="rgb(222,201,40)" fg:x="68274" fg:w="602"/><text x="21.4489%" y="127.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (46 samples, 0.01%)</title><rect x="21.3982%" y="149" width="0.0143%" height="15" fill="rgb(235,61,29)" fg:x="68916" fg:w="46"/><text x="21.6482%" y="159.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (115 samples, 0.04%)</title><rect x="21.4159%" y="149" width="0.0357%" height="15" fill="rgb(219,207,3)" fg:x="68973" fg:w="115"/><text x="21.6659%" y="159.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (62 samples, 0.02%)</title><rect x="21.4324%" y="133" width="0.0193%" height="15" fill="rgb(222,56,46)" fg:x="69026" fg:w="62"/><text x="21.6824%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (104 samples, 0.03%)</title><rect x="21.4516%" y="149" width="0.0323%" height="15" fill="rgb(239,76,54)" fg:x="69088" fg:w="104"/><text x="21.7016%" y="159.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (73 samples, 0.02%)</title><rect x="21.4613%" y="133" width="0.0227%" height="15" fill="rgb(231,124,27)" fg:x="69119" fg:w="73"/><text x="21.7113%" y="143.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.01%)</title><rect x="21.4904%" y="133" width="0.0121%" height="15" fill="rgb(249,195,6)" fg:x="69213" fg:w="39"/><text x="21.7404%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (46 samples, 0.01%)</title><rect x="21.4898%" y="149" width="0.0143%" height="15" fill="rgb(237,174,47)" fg:x="69211" fg:w="46"/><text x="21.7398%" y="159.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (72 samples, 0.02%)</title><rect x="21.5631%" y="101" width="0.0224%" height="15" fill="rgb(206,201,31)" fg:x="69447" fg:w="72"/><text x="21.8131%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (3,240 samples, 1.01%)</title><rect x="21.7966%" y="85" width="1.0060%" height="15" fill="rgb(231,57,52)" fg:x="70199" fg:w="3240"/><text x="22.0466%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (6,318 samples, 1.96%)</title><rect x="21.5855%" y="101" width="1.9617%" height="15" fill="rgb(248,177,22)" fg:x="69519" fg:w="6318"/><text x="21.8355%" y="111.50">r..</text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (2,391 samples, 0.74%)</title><rect x="22.8048%" y="85" width="0.7424%" height="15" fill="rgb(215,211,37)" fg:x="73446" fg:w="2391"/><text x="23.0548%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (660 samples, 0.20%)</title><rect x="23.3423%" y="69" width="0.2049%" height="15" fill="rgb(241,128,51)" fg:x="75177" fg:w="660"/><text x="23.5923%" y="79.50"></text></g><g><title>__memset_avx2_erms (4,188 samples, 1.30%)</title><rect x="23.9704%" y="69" width="1.3004%" height="15" fill="rgb(227,165,31)" fg:x="77200" fg:w="4188"/><text x="24.2204%" y="79.50"></text></g><g><title>[unknown] (554 samples, 0.17%)</title><rect x="25.0987%" y="53" width="0.1720%" height="15" fill="rgb(228,167,24)" fg:x="80834" fg:w="554"/><text x="25.3487%" y="63.50"></text></g><g><title>[unknown] (300 samples, 0.09%)</title><rect x="25.9051%" y="37" width="0.0931%" height="15" fill="rgb(228,143,12)" fg:x="83431" fg:w="300"/><text x="26.1551%" y="47.50"></text></g><g><title>__calloc (6,709 samples, 2.08%)</title><rect x="23.9564%" y="85" width="2.0831%" height="15" fill="rgb(249,149,8)" fg:x="77155" fg:w="6709"/><text x="24.2064%" y="95.50">_..</text></g><g><title>_int_malloc (2,457 samples, 0.76%)</title><rect x="25.2767%" y="69" width="0.7629%" height="15" fill="rgb(243,35,44)" fg:x="81407" fg:w="2457"/><text x="25.5267%" y="79.50"></text></g><g><title>sysmalloc (2,404 samples, 0.75%)</title><rect x="25.2931%" y="53" width="0.7464%" height="15" fill="rgb(246,89,9)" fg:x="81460" fg:w="2404"/><text x="25.5431%" y="63.50"></text></g><g><title>__GI___mprotect (133 samples, 0.04%)</title><rect x="25.9982%" y="37" width="0.0413%" height="15" fill="rgb(233,213,13)" fg:x="83731" fg:w="133"/><text x="26.2482%" y="47.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (14,466 samples, 4.49%)</title><rect x="21.5581%" y="117" width="4.4917%" height="15" fill="rgb(233,141,41)" fg:x="69431" fg:w="14466"/><text x="21.8081%" y="127.50">rucen..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (8,060 samples, 2.50%)</title><rect x="23.5472%" y="101" width="2.5026%" height="15" fill="rgb(239,167,4)" fg:x="75837" fg:w="8060"/><text x="23.7972%" y="111.50">ru..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (115 samples, 0.04%)</title><rect x="26.0557%" y="101" width="0.0357%" height="15" fill="rgb(209,217,16)" fg:x="83916" fg:w="115"/><text x="26.3057%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (204 samples, 0.06%)</title><rect x="26.0498%" y="117" width="0.0633%" height="15" fill="rgb(219,88,35)" fg:x="83897" fg:w="204"/><text x="26.2998%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (70 samples, 0.02%)</title><rect x="26.0914%" y="101" width="0.0217%" height="15" fill="rgb(220,193,23)" fg:x="84031" fg:w="70"/><text x="26.3414%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (14,796 samples, 4.59%)</title><rect x="21.5196%" y="149" width="4.5941%" height="15" fill="rgb(230,90,52)" fg:x="69307" fg:w="14796"/><text x="21.7696%" y="159.50">rucen..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (14,744 samples, 4.58%)</title><rect x="21.5358%" y="133" width="4.5780%" height="15" fill="rgb(252,106,19)" fg:x="69359" fg:w="14744"/><text x="21.7858%" y="143.50">rucen..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (41 samples, 0.01%)</title><rect x="26.2085%" y="133" width="0.0127%" height="15" fill="rgb(206,74,20)" fg:x="84408" fg:w="41"/><text x="26.4585%" y="143.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (802 samples, 0.25%)</title><rect x="26.2212%" y="133" width="0.2490%" height="15" fill="rgb(230,138,44)" fg:x="84449" fg:w="802"/><text x="26.4712%" y="143.50"></text></g><g><title>__memcmp_avx2_movbe (419 samples, 0.13%)</title><rect x="26.3401%" y="117" width="0.1301%" height="15" fill="rgb(235,182,43)" fg:x="84832" fg:w="419"/><text x="26.5901%" y="127.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_left (63 samples, 0.02%)</title><rect x="26.4789%" y="133" width="0.0196%" height="15" fill="rgb(242,16,51)" fg:x="85279" fg:w="63"/><text x="26.7289%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::push_right (68 samples, 0.02%)</title><rect x="26.4985%" y="133" width="0.0211%" height="15" fill="rgb(248,9,4)" fg:x="85342" fg:w="68"/><text x="26.7485%" y="143.50"></text></g><g><title>&lt;rucene::core::util::bkd::bkd_reader::PackedIndexTree as rucene::core::util::bkd::bkd_reader::IndexTree&gt;::split_packed_value (34 samples, 0.01%)</title><rect x="26.5261%" y="133" width="0.0106%" height="15" fill="rgb(210,31,22)" fg:x="85431" fg:w="34"/><text x="26.7761%" y="143.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_bytes (382 samples, 0.12%)</title><rect x="26.5531%" y="133" width="0.1186%" height="15" fill="rgb(239,54,39)" fg:x="85518" fg:w="382"/><text x="26.8031%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (160 samples, 0.05%)</title><rect x="26.6220%" y="117" width="0.0497%" height="15" fill="rgb(230,99,41)" fg:x="85740" fg:w="160"/><text x="26.8720%" y="127.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (2,215 samples, 0.69%)</title><rect x="26.8270%" y="85" width="0.6878%" height="15" fill="rgb(253,106,12)" fg:x="86400" fg:w="2215"/><text x="27.0770%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (4,116 samples, 1.28%)</title><rect x="26.6950%" y="101" width="1.2780%" height="15" fill="rgb(213,46,41)" fg:x="85975" fg:w="4116"/><text x="26.9450%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (1,473 samples, 0.46%)</title><rect x="27.5156%" y="85" width="0.4574%" height="15" fill="rgb(215,133,35)" fg:x="88618" fg:w="1473"/><text x="27.7656%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (420 samples, 0.13%)</title><rect x="27.8426%" y="69" width="0.1304%" height="15" fill="rgb(213,28,5)" fg:x="89671" fg:w="420"/><text x="28.0926%" y="79.50"></text></g><g><title>__memset_avx2_erms (194 samples, 0.06%)</title><rect x="27.9864%" y="69" width="0.0602%" height="15" fill="rgb(215,77,49)" fg:x="90134" fg:w="194"/><text x="28.2364%" y="79.50"></text></g><g><title>__calloc (355 samples, 0.11%)</title><rect x="27.9811%" y="85" width="0.1102%" height="15" fill="rgb(248,100,22)" fg:x="90117" fg:w="355"/><text x="28.2311%" y="95.50"></text></g><g><title>_int_malloc (140 samples, 0.04%)</title><rect x="28.0478%" y="69" width="0.0435%" height="15" fill="rgb(208,67,9)" fg:x="90332" fg:w="140"/><text x="28.2978%" y="79.50"></text></g><g><title>sysmalloc (71 samples, 0.02%)</title><rect x="28.0693%" y="53" width="0.0220%" height="15" fill="rgb(219,133,21)" fg:x="90401" fg:w="71"/><text x="28.3193%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,537 samples, 1.41%)</title><rect x="26.6832%" y="117" width="1.4087%" height="15" fill="rgb(246,46,29)" fg:x="85937" fg:w="4537"/><text x="26.9332%" y="127.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (383 samples, 0.12%)</title><rect x="27.9730%" y="101" width="0.1189%" height="15" fill="rgb(246,185,52)" fg:x="90091" fg:w="383"/><text x="28.2230%" y="111.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (99 samples, 0.03%)</title><rect x="28.0975%" y="101" width="0.0307%" height="15" fill="rgb(252,136,11)" fg:x="90492" fg:w="99"/><text x="28.3475%" y="111.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (176 samples, 0.05%)</title><rect x="28.0919%" y="117" width="0.0546%" height="15" fill="rgb(219,138,53)" fg:x="90474" fg:w="176"/><text x="28.3419%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (59 samples, 0.02%)</title><rect x="28.1283%" y="101" width="0.0183%" height="15" fill="rgb(211,51,23)" fg:x="90591" fg:w="59"/><text x="28.3783%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (4,763 samples, 1.48%)</title><rect x="26.6717%" y="133" width="1.4789%" height="15" fill="rgb(247,221,28)" fg:x="85900" fg:w="4763"/><text x="26.9217%" y="143.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::compare (64 samples, 0.02%)</title><rect x="29.7003%" y="117" width="0.0199%" height="15" fill="rgb(251,222,45)" fg:x="95654" fg:w="64"/><text x="29.9503%" y="127.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit_by_packed_value (14,831 samples, 4.60%)</title><rect x="29.7205%" y="117" width="4.6050%" height="15" fill="rgb(217,162,53)" fg:x="95719" fg:w="14831"/><text x="29.9705%" y="127.50">&lt;ruce..</text></g><g><title>__memcmp_avx2_movbe (7,262 samples, 2.25%)</title><rect x="32.0706%" y="101" width="2.2548%" height="15" fill="rgb(229,93,14)" fg:x="103288" fg:w="7262"/><text x="32.3206%" y="111.50">_..</text></g><g><title>__memmove_avx_unaligned_erms (2,884 samples, 0.90%)</title><rect x="35.5327%" y="101" width="0.8955%" height="15" fill="rgb(209,67,49)" fg:x="114438" fg:w="2884"/><text x="35.7827%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_bytes (6,728 samples, 2.09%)</title><rect x="34.3394%" y="117" width="2.0890%" height="15" fill="rgb(213,87,29)" fg:x="110595" fg:w="6728"/><text x="34.5894%" y="127.50">r..</text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeIntersectVisitor as rucene::core::codec::points::point_values::IntersectVisitor&gt;::visit (1,618 samples, 0.50%)</title><rect x="36.5272%" y="85" width="0.5024%" height="15" fill="rgb(205,151,52)" fg:x="117641" fg:w="1618"/><text x="36.7772%" y="95.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints_with_visitor (2,885 samples, 0.90%)</title><rect x="36.4362%" y="101" width="0.8958%" height="15" fill="rgb(253,215,39)" fg:x="117348" fg:w="2885"/><text x="36.6862%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (971 samples, 0.30%)</title><rect x="37.0305%" y="85" width="0.3015%" height="15" fill="rgb(221,220,41)" fg:x="119262" fg:w="971"/><text x="37.2805%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (264 samples, 0.08%)</title><rect x="37.2500%" y="69" width="0.0820%" height="15" fill="rgb(218,133,21)" fg:x="119969" fg:w="264"/><text x="37.5000%" y="79.50"></text></g><g><title>__memset_avx2_erms (41 samples, 0.01%)</title><rect x="37.3407%" y="69" width="0.0127%" height="15" fill="rgb(221,193,43)" fg:x="120261" fg:w="41"/><text x="37.5907%" y="79.50"></text></g><g><title>__calloc (137 samples, 0.04%)</title><rect x="37.3364%" y="85" width="0.0425%" height="15" fill="rgb(240,128,52)" fg:x="120247" fg:w="137"/><text x="37.5864%" y="95.50"></text></g><g><title>_int_malloc (76 samples, 0.02%)</title><rect x="37.3553%" y="69" width="0.0236%" height="15" fill="rgb(253,114,12)" fg:x="120308" fg:w="76"/><text x="37.6053%" y="79.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::add_all (3,063 samples, 0.95%)</title><rect x="36.4285%" y="117" width="0.9511%" height="15" fill="rgb(215,223,47)" fg:x="117323" fg:w="3063"/><text x="36.6785%" y="127.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (153 samples, 0.05%)</title><rect x="37.3320%" y="101" width="0.0475%" height="15" fill="rgb(248,225,23)" fg:x="120233" fg:w="153"/><text x="37.5820%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::read_common_prefixes (50 samples, 0.02%)</title><rect x="37.3795%" y="117" width="0.0155%" height="15" fill="rgb(250,108,0)" fg:x="120386" fg:w="50"/><text x="37.6295%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_vint (234 samples, 0.07%)</title><rect x="37.4112%" y="101" width="0.0727%" height="15" fill="rgb(228,208,7)" fg:x="120488" fg:w="234"/><text x="37.6612%" y="111.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::read_doc_ids (4,185 samples, 1.30%)</title><rect x="37.4003%" y="117" width="1.2994%" height="15" fill="rgb(244,45,10)" fg:x="120453" fg:w="4185"/><text x="37.6503%" y="127.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints (3,916 samples, 1.22%)</title><rect x="37.4839%" y="101" width="1.2159%" height="15" fill="rgb(207,125,25)" fg:x="120722" fg:w="3916"/><text x="37.7339%" y="111.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (2,854 samples, 0.89%)</title><rect x="37.8136%" y="85" width="0.8862%" height="15" fill="rgb(210,195,18)" fg:x="121784" fg:w="2854"/><text x="38.0636%" y="95.50"></text></g><g><title>__memmove_avx_unaligned_erms (725 samples, 0.23%)</title><rect x="38.4747%" y="69" width="0.2251%" height="15" fill="rgb(249,80,12)" fg:x="123913" fg:w="725"/><text x="38.7247%" y="79.50"></text></g><g><title>__memset_avx2_erms (777 samples, 0.24%)</title><rect x="38.7789%" y="85" width="0.2413%" height="15" fill="rgb(221,65,9)" fg:x="124893" fg:w="777"/><text x="39.0289%" y="95.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="38.9929%" y="69" width="0.0273%" height="15" fill="rgb(235,49,36)" fg:x="125582" fg:w="88"/><text x="39.2429%" y="79.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="39.1388%" y="53" width="0.0109%" height="15" fill="rgb(225,32,20)" fg:x="126052" fg:w="35"/><text x="39.3888%" y="63.50"></text></g><g><title>__calloc (1,296 samples, 0.40%)</title><rect x="38.7693%" y="101" width="0.4024%" height="15" fill="rgb(215,141,46)" fg:x="124862" fg:w="1296"/><text x="39.0193%" y="111.50"></text></g><g><title>_int_malloc (475 samples, 0.15%)</title><rect x="39.0242%" y="85" width="0.1475%" height="15" fill="rgb(250,160,47)" fg:x="125683" fg:w="475"/><text x="39.2742%" y="95.50"></text></g><g><title>sysmalloc (347 samples, 0.11%)</title><rect x="39.0640%" y="69" width="0.1077%" height="15" fill="rgb(216,222,40)" fg:x="125811" fg:w="347"/><text x="39.3140%" y="79.50"></text></g><g><title>__GI___mprotect (71 samples, 0.02%)</title><rect x="39.1497%" y="53" width="0.0220%" height="15" fill="rgb(234,217,39)" fg:x="126087" fg:w="71"/><text x="39.3997%" y="63.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (35,535 samples, 11.03%)</title><rect x="28.1506%" y="133" width="11.0335%" height="15" fill="rgb(207,178,40)" fg:x="90663" fg:w="35535"/><text x="28.4006%" y="143.50">rucene::core::ut..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (1,560 samples, 0.48%)</title><rect x="38.6998%" y="117" width="0.4844%" height="15" fill="rgb(221,136,13)" fg:x="124638" fg:w="1560"/><text x="38.9498%" y="127.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::read_doc_ids (245 samples, 0.08%)</title><rect x="39.1844%" y="133" width="0.0761%" height="15" fill="rgb(249,199,10)" fg:x="126199" fg:w="245"/><text x="39.4344%" y="143.50"></text></g><g><title>rucene::core::util::bkd::doc_ids_writer::DocIdsWriter::read_ints (225 samples, 0.07%)</title><rect x="39.1907%" y="117" width="0.0699%" height="15" fill="rgb(249,222,13)" fg:x="126219" fg:w="225"/><text x="39.4407%" y="127.50"></text></g><g><title>rucene::core::store::io::data_input::DataInput::read_long (151 samples, 0.05%)</title><rect x="39.2136%" y="101" width="0.0469%" height="15" fill="rgb(244,185,38)" fg:x="126293" fg:w="151"/><text x="39.4636%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (50 samples, 0.02%)</title><rect x="39.2450%" y="85" width="0.0155%" height="15" fill="rgb(236,202,9)" fg:x="126394" fg:w="50"/><text x="39.4950%" y="95.50"></text></g><g><title>__memset_avx2_erms (43 samples, 0.01%)</title><rect x="39.2674%" y="101" width="0.0134%" height="15" fill="rgb(250,229,37)" fg:x="126466" fg:w="43"/><text x="39.5174%" y="111.50"></text></g><g><title>__calloc (92 samples, 0.03%)</title><rect x="39.2661%" y="117" width="0.0286%" height="15" fill="rgb(206,174,23)" fg:x="126462" fg:w="92"/><text x="39.5161%" y="127.50"></text></g><g><title>_int_malloc (45 samples, 0.01%)</title><rect x="39.2807%" y="101" width="0.0140%" height="15" fill="rgb(211,33,43)" fg:x="126509" fg:w="45"/><text x="39.5307%" y="111.50"></text></g><g><title>sysmalloc (41 samples, 0.01%)</title><rect x="39.2819%" y="85" width="0.0127%" height="15" fill="rgb(245,58,50)" fg:x="126513" fg:w="41"/><text x="39.5319%" y="95.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (123,195 samples, 38.25%)</title><rect x="1.0433%" y="293" width="38.2517%" height="15" fill="rgb(244,68,36)" fg:x="3360" fg:w="123195"/><text x="1.2933%" y="303.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (122,724 samples, 38.11%)</title><rect x="1.1895%" y="277" width="38.1055%" height="15" fill="rgb(232,229,15)" fg:x="3831" fg:w="122724"/><text x="1.4395%" y="287.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (122,380 samples, 38.00%)</title><rect x="1.2963%" y="261" width="37.9987%" height="15" fill="rgb(254,30,23)" fg:x="4175" fg:w="122380"/><text x="1.5463%" y="271.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (122,088 samples, 37.91%)</title><rect x="1.3870%" y="245" width="37.9080%" height="15" fill="rgb(235,160,14)" fg:x="4467" fg:w="122088"/><text x="1.6370%" y="255.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (121,770 samples, 37.81%)</title><rect x="1.4857%" y="229" width="37.8093%" height="15" fill="rgb(212,155,44)" fg:x="4785" fg:w="121770"/><text x="1.7357%" y="239.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (117,857 samples, 36.59%)</title><rect x="2.7007%" y="213" width="36.5943%" height="15" fill="rgb(226,2,50)" fg:x="8698" fg:w="117857"/><text x="2.9507%" y="223.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect_wi..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (95,914 samples, 29.78%)</title><rect x="9.5139%" y="197" width="29.7810%" height="15" fill="rgb(234,177,6)" fg:x="30641" fg:w="95914"/><text x="9.7639%" y="207.50">rucene::core::util::bkd::bkd_reader::BKDReader::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (74,837 samples, 23.24%)</title><rect x="16.0583%" y="181" width="23.2367%" height="15" fill="rgb(217,24,9)" fg:x="51718" fg:w="74837"/><text x="16.3083%" y="191.50">rucene::core::util::bkd::bkd_reader::..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (57,679 samples, 17.91%)</title><rect x="21.3858%" y="165" width="17.9092%" height="15" fill="rgb(220,13,46)" fg:x="68876" fg:w="57679"/><text x="21.6358%" y="175.50">rucene::core::util::bkd::bkd..</text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect_with_state (42,452 samples, 13.18%)</title><rect x="26.1138%" y="149" width="13.1812%" height="15" fill="rgb(239,221,27)" fg:x="84103" fg:w="42452"/><text x="26.3638%" y="159.50">rucene::core::util::..</text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::grow (111 samples, 0.03%)</title><rect x="39.2605%" y="133" width="0.0345%" height="15" fill="rgb(222,198,25)" fg:x="126444" fg:w="111"/><text x="39.5105%" y="143.50"></text></g><g><title>__GI___libc_malloc (660 samples, 0.20%)</title><rect x="39.3208%" y="261" width="0.2049%" height="15" fill="rgb(211,99,13)" fg:x="126638" fg:w="660"/><text x="39.5708%" y="271.50"></text></g><g><title>_int_malloc (383 samples, 0.12%)</title><rect x="39.4068%" y="245" width="0.1189%" height="15" fill="rgb(232,111,31)" fg:x="126915" fg:w="383"/><text x="39.6568%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (39 samples, 0.01%)</title><rect x="39.5257%" y="261" width="0.0121%" height="15" fill="rgb(245,82,37)" fg:x="127298" fg:w="39"/><text x="39.7757%" y="271.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (767 samples, 0.24%)</title><rect x="39.3059%" y="277" width="0.2382%" height="15" fill="rgb(227,149,46)" fg:x="126590" fg:w="767"/><text x="39.5559%" y="287.50"></text></g><g><title>__calloc (332 samples, 0.10%)</title><rect x="39.5440%" y="277" width="0.1031%" height="15" fill="rgb(218,36,50)" fg:x="127357" fg:w="332"/><text x="39.7940%" y="287.50"></text></g><g><title>_int_malloc (165 samples, 0.05%)</title><rect x="39.5959%" y="261" width="0.0512%" height="15" fill="rgb(226,80,48)" fg:x="127524" fg:w="165"/><text x="39.8459%" y="271.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::BKDReader::intersect (125,379 samples, 38.93%)</title><rect x="0.7660%" y="309" width="38.9298%" height="15" fill="rgb(238,224,15)" fg:x="2467" fg:w="125379"/><text x="1.0160%" y="319.50">rucene::core::util::bkd::bkd_reader::BKDReader::intersect</text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::new (1,284 samples, 0.40%)</title><rect x="39.2972%" y="293" width="0.3987%" height="15" fill="rgb(241,136,10)" fg:x="126562" fg:w="1284"/><text x="39.5472%" y="303.50"></text></g><g><title>rucene::core::util::bkd::bkd_reader::PackedIndexTree::read_node_data (101 samples, 0.03%)</title><rect x="39.6645%" y="277" width="0.0314%" height="15" fill="rgb(208,32,45)" fg:x="127745" fg:w="101"/><text x="39.9145%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.01%)</title><rect x="39.8505%" y="293" width="0.0106%" height="15" fill="rgb(207,135,9)" fg:x="128344" fg:w="34"/><text x="40.1005%" y="303.50"></text></g><g><title>__GI___libc_realloc (59 samples, 0.02%)</title><rect x="39.8778%" y="261" width="0.0183%" height="15" fill="rgb(206,86,44)" fg:x="128432" fg:w="59"/><text x="40.1278%" y="271.50"></text></g><g><title>_int_realloc (58 samples, 0.02%)</title><rect x="39.8781%" y="245" width="0.0180%" height="15" fill="rgb(245,177,15)" fg:x="128433" fg:w="58"/><text x="40.1281%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (61 samples, 0.02%)</title><rect x="39.8775%" y="293" width="0.0189%" height="15" fill="rgb(206,64,50)" fg:x="128431" fg:w="61"/><text x="40.1275%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.02%)</title><rect x="39.8775%" y="277" width="0.0189%" height="15" fill="rgb(234,36,40)" fg:x="128431" fg:w="61"/><text x="40.1275%" y="287.50"></text></g><g><title>__calloc (143 samples, 0.04%)</title><rect x="41.3520%" y="277" width="0.0444%" height="15" fill="rgb(213,64,8)" fg:x="133180" fg:w="143"/><text x="41.6020%" y="287.50"></text></g><g><title>_int_malloc (116 samples, 0.04%)</title><rect x="41.3604%" y="261" width="0.0360%" height="15" fill="rgb(210,75,36)" fg:x="133207" fg:w="116"/><text x="41.6104%" y="271.50"></text></g><g><title>malloc_consolidate (67 samples, 0.02%)</title><rect x="41.3756%" y="245" width="0.0208%" height="15" fill="rgb(229,88,21)" fg:x="133256" fg:w="67"/><text x="41.6256%" y="255.50"></text></g><g><title>rucene::core::util::doc_id_set_builder::DocIdSetBuilder::build (5,518 samples, 1.71%)</title><rect x="39.6958%" y="309" width="1.7133%" height="15" fill="rgb(252,204,47)" fg:x="127846" fg:w="5518"/><text x="39.9458%" y="319.50"></text></g><g><title>rucene::core::util::sorter::LSBRadixSorter::sort (4,867 samples, 1.51%)</title><rect x="39.8980%" y="293" width="1.5112%" height="15" fill="rgb(208,77,27)" fg:x="128497" fg:w="4867"/><text x="40.1480%" y="303.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointRangeWeight as rucene::core::search::query::Weight&lt;C&gt;&gt;::create_scorer (132,043 samples, 41.00%)</title><rect x="0.4154%" y="325" width="40.9990%" height="15" fill="rgb(221,76,26)" fg:x="1338" fg:w="132043"/><text x="0.6654%" y="335.50">&lt;rucene::core::search::query::point_range_query::PointRangeWeight a..</text></g><g><title>__GI___libc_free (65 samples, 0.02%)</title><rect x="41.4144%" y="325" width="0.0202%" height="15" fill="rgb(225,139,18)" fg:x="133381" fg:w="65"/><text x="41.6644%" y="335.50"></text></g><g><title>__GI_madvise (4,690 samples, 1.46%)</title><rect x="41.5154%" y="293" width="1.4562%" height="15" fill="rgb(230,137,11)" fg:x="133706" fg:w="4690"/><text x="41.7654%" y="303.50"></text></g><g><title>[unknown] (339 samples, 0.11%)</title><rect x="42.8663%" y="277" width="0.1053%" height="15" fill="rgb(212,28,1)" fg:x="138057" fg:w="339"/><text x="43.1163%" y="287.50"></text></g><g><title>_int_free (4,978 samples, 1.55%)</title><rect x="41.4725%" y="309" width="1.5457%" height="15" fill="rgb(248,164,17)" fg:x="133568" fg:w="4978"/><text x="41.7225%" y="319.50"></text></g><g><title>malloc_consolidate (150 samples, 0.05%)</title><rect x="42.9716%" y="293" width="0.0466%" height="15" fill="rgb(222,171,42)" fg:x="138396" fg:w="150"/><text x="43.2216%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5,055 samples, 1.57%)</title><rect x="41.4498%" y="325" width="1.5696%" height="15" fill="rgb(243,84,45)" fg:x="133495" fg:w="5055"/><text x="41.6998%" y="335.50"></text></g><g><title>__GI___libc_malloc (79 samples, 0.02%)</title><rect x="43.0315%" y="309" width="0.0245%" height="15" fill="rgb(252,49,23)" fg:x="138589" fg:w="79"/><text x="43.2815%" y="319.50"></text></g><g><title>rucene::core::search::collector::top_docs::TopDocsCollector::new (85 samples, 0.03%)</title><rect x="43.0315%" y="325" width="0.0264%" height="15" fill="rgb(215,19,7)" fg:x="138589" fg:w="85"/><text x="43.2815%" y="335.50"></text></g><g><title>&lt;rucene::core::util::doc_id_set::DocIdSetDocIterEnum as rucene::core::search::DocIterator&gt;::next (70,719 samples, 21.96%)</title><rect x="60.1812%" y="277" width="21.9581%" height="15" fill="rgb(238,81,41)" fg:x="193822" fg:w="70719"/><text x="60.4312%" y="287.50">&lt;rucene::core::util::doc_id_set::Do..</text></g><g><title>[unknown] (122 samples, 0.04%)</title><rect x="82.1014%" y="261" width="0.0379%" height="15" fill="rgb(210,199,37)" fg:x="264419" fg:w="122"/><text x="82.3514%" y="271.50"></text></g><g><title>&lt;rucene::core::search::query::point_range_query::PointDocIterEnum as rucene::core::search::DocIterator&gt;::next (84,410 samples, 26.21%)</title><rect x="55.9380%" y="293" width="26.2091%" height="15" fill="rgb(244,192,49)" fg:x="180156" fg:w="84410"/><text x="56.1880%" y="303.50">&lt;rucene::core::search::query::point_range_..</text></g><g><title>&lt;rucene::core::search::scorer::ConstantScoreScorer&lt;T&gt; as rucene::core::search::DocIterator&gt;::next (90,265 samples, 28.03%)</title><rect x="54.1246%" y="309" width="28.0270%" height="15" fill="rgb(226,211,11)" fg:x="174316" fg:w="90265"/><text x="54.3746%" y="319.50">&lt;rucene::core::search::scorer::ConstantScoreS..</text></g><g><title>&lt;rucene::core::search::scorer::ConstantScoreScorer&lt;T&gt; as rucene::core::search::scorer::Scorer&gt;::score (10,712 samples, 3.33%)</title><rect x="82.1517%" y="309" width="3.3260%" height="15" fill="rgb(236,162,54)" fg:x="264581" fg:w="10712"/><text x="82.4017%" y="319.50">&lt;ru..</text></g><g><title>&lt;rucene::core::util::bits::MatchAllBits as rucene::core::util::bits::Bits&gt;::get (8,530 samples, 2.65%)</title><rect x="85.4777%" y="309" width="2.6485%" height="15" fill="rgb(220,229,9)" fg:x="275293" fg:w="8530"/><text x="85.7277%" y="319.50">&lt;r..</text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="88.1263%" y="309" width="0.0279%" height="15" fill="rgb(250,87,22)" fg:x="283823" fg:w="90"/><text x="88.3763%" y="319.50"></text></g><g><title>rucene::core::search::scorer::bulk_scorer::BulkScorer&lt;S&gt;::score (177,587 samples, 55.14%)</title><rect x="43.0579%" y="325" width="55.1403%" height="15" fill="rgb(239,43,17)" fg:x="138674" fg:w="177587"/><text x="43.3079%" y="335.50">rucene::core::search::scorer::bulk_scorer::BulkScorer&lt;S&gt;::score</text></g><g><title>rucene::core::search::collector::top_docs::TopDocsBaseCollector::add_doc (32,348 samples, 10.04%)</title><rect x="88.1542%" y="309" width="10.0440%" height="15" fill="rgb(231,177,25)" fg:x="283913" fg:w="32348"/><text x="88.4042%" y="319.50">rucene::core::s..</text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="98.1777%" y="293" width="0.0205%" height="15" fill="rgb(219,179,1)" fg:x="316195" fg:w="66"/><text x="98.4277%" y="303.50"></text></g><g><title>__errno_location (73 samples, 0.02%)</title><rect x="98.2761%" y="293" width="0.0227%" height="15" fill="rgb(238,219,53)" fg:x="316512" fg:w="73"/><text x="98.5261%" y="303.50"></text></g><g><title>[[vdso]] (50 samples, 0.02%)</title><rect x="98.3100%" y="261" width="0.0155%" height="15" fill="rgb(232,167,36)" fg:x="316621" fg:w="50"/><text x="98.5600%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (90 samples, 0.03%)</title><rect x="98.2988%" y="293" width="0.0279%" height="15" fill="rgb(244,19,51)" fg:x="316585" fg:w="90"/><text x="98.5488%" y="303.50"></text></g><g><title>__GI___clock_gettime (82 samples, 0.03%)</title><rect x="98.3013%" y="277" width="0.0255%" height="15" fill="rgb(224,6,22)" fg:x="316593" fg:w="82"/><text x="98.5513%" y="287.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3,279 samples, 1.02%)</title><rect x="98.2538%" y="309" width="1.0181%" height="15" fill="rgb(224,145,5)" fg:x="316440" fg:w="3279"/><text x="98.5038%" y="319.50"></text></g><g><title>syscall (3,044 samples, 0.95%)</title><rect x="98.3267%" y="293" width="0.9452%" height="15" fill="rgb(234,130,49)" fg:x="316675" fg:w="3044"/><text x="98.5767%" y="303.50"></text></g><g><title>[unknown] (281 samples, 0.09%)</title><rect x="99.1846%" y="277" width="0.0872%" height="15" fill="rgb(254,6,2)" fg:x="319438" fg:w="281"/><text x="99.4346%" y="287.50"></text></g><g><title>std::thread::park_timeout (3,482 samples, 1.08%)</title><rect x="98.1982%" y="325" width="1.0812%" height="15" fill="rgb(208,96,46)" fg:x="316261" fg:w="3482"/><text x="98.4482%" y="335.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (319,094 samples, 99.08%)</title><rect x="0.2729%" y="341" width="99.0778%" height="15" fill="rgb(239,3,39)" fg:x="879" fg:w="319094"/><text x="0.5229%" y="351.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::thread::sleep (230 samples, 0.07%)</title><rect x="99.2793%" y="325" width="0.0714%" height="15" fill="rgb(233,210,1)" fg:x="319743" fg:w="230"/><text x="99.5293%" y="335.50"></text></g><g><title>__GI___nanosleep (214 samples, 0.07%)</title><rect x="99.2843%" y="309" width="0.0664%" height="15" fill="rgb(244,137,37)" fg:x="319759" fg:w="214"/><text x="99.5343%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (319,137 samples, 99.09%)</title><rect x="0.2599%" y="357" width="99.0912%" height="15" fill="rgb(240,136,2)" fg:x="837" fg:w="319137"/><text x="0.5099%" y="367.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>__GI___clone (319,852 samples, 99.31%)</title><rect x="0.0450%" y="405" width="99.3132%" height="15" fill="rgb(239,18,37)" fg:x="145" fg:w="319852"/><text x="0.2950%" y="415.50">__GI___clone</text></g><g><title>start_thread (319,229 samples, 99.12%)</title><rect x="0.2385%" y="389" width="99.1197%" height="15" fill="rgb(218,185,22)" fg:x="768" fg:w="319229"/><text x="0.4885%" y="399.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (319,196 samples, 99.11%)</title><rect x="0.2487%" y="373" width="99.1095%" height="15" fill="rgb(225,218,4)" fg:x="801" fg:w="319196"/><text x="0.4987%" y="383.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="99.3948%" y="293" width="0.0112%" height="15" fill="rgb(230,182,32)" fg:x="320115" fg:w="36"/><text x="99.6448%" y="303.50"></text></g><g><title>__GI___libc_malloc (80 samples, 0.02%)</title><rect x="99.4902%" y="213" width="0.0248%" height="15" fill="rgb(242,56,43)" fg:x="320422" fg:w="80"/><text x="99.7402%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (239 samples, 0.07%)</title><rect x="99.4451%" y="261" width="0.0742%" height="15" fill="rgb(233,99,24)" fg:x="320277" fg:w="239"/><text x="99.6951%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (157 samples, 0.05%)</title><rect x="99.4706%" y="245" width="0.0487%" height="15" fill="rgb(234,209,42)" fg:x="320359" fg:w="157"/><text x="99.7206%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 samples, 0.04%)</title><rect x="99.4796%" y="229" width="0.0397%" height="15" fill="rgb(227,7,12)" fg:x="320388" fg:w="128"/><text x="99.7296%" y="239.50"></text></g><g><title>core::slice::memchr::memchr_aligned (170 samples, 0.05%)</title><rect x="99.5194%" y="261" width="0.0528%" height="15" fill="rgb(245,203,43)" fg:x="320516" fg:w="170"/><text x="99.7694%" y="271.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (620 samples, 0.19%)</title><rect x="99.4060%" y="293" width="0.1925%" height="15" fill="rgb(238,205,33)" fg:x="320151" fg:w="620"/><text x="99.6560%" y="303.50"></text></g><g><title>std::io::append_to_string (586 samples, 0.18%)</title><rect x="99.4166%" y="277" width="0.1820%" height="15" fill="rgb(231,56,7)" fg:x="320185" fg:w="586"/><text x="99.6666%" y="287.50"></text></g><g><title>core::str::converts::from_utf8 (85 samples, 0.03%)</title><rect x="99.5721%" y="261" width="0.0264%" height="15" fill="rgb(244,186,29)" fg:x="320686" fg:w="85"/><text x="99.8221%" y="271.50"></text></g><g><title>__GI___libc_malloc (62 samples, 0.02%)</title><rect x="99.6072%" y="293" width="0.0193%" height="15" fill="rgb(234,111,31)" fg:x="320799" fg:w="62"/><text x="99.8572%" y="303.50"></text></g><g><title>_int_free (53 samples, 0.02%)</title><rect x="99.6308%" y="293" width="0.0165%" height="15" fill="rgb(241,149,10)" fg:x="320875" fg:w="53"/><text x="99.8808%" y="303.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for isize&gt;::from_str (163 samples, 0.05%)</title><rect x="99.6473%" y="293" width="0.0506%" height="15" fill="rgb(249,206,44)" fg:x="320928" fg:w="163"/><text x="99.8973%" y="303.50"></text></g><g><title>core::num::from_str_radix (151 samples, 0.05%)</title><rect x="99.6510%" y="277" width="0.0469%" height="15" fill="rgb(251,153,30)" fg:x="320940" fg:w="151"/><text x="99.9010%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rucene::core::doc::field::Field&gt; (265 samples, 0.08%)</title><rect x="99.6979%" y="293" width="0.0823%" height="15" fill="rgb(239,152,38)" fg:x="321091" fg:w="265"/><text x="99.9479%" y="303.50"></text></g><g><title>_int_free (190 samples, 0.06%)</title><rect x="99.7212%" y="277" width="0.0590%" height="15" fill="rgb(249,139,47)" fg:x="321166" fg:w="190"/><text x="99.9712%" y="287.50"></text></g><g><title>rucene::core::doc::field::Field::new_bytes (172 samples, 0.05%)</title><rect x="99.7805%" y="293" width="0.0534%" height="15" fill="rgb(244,64,35)" fg:x="321357" fg:w="172"/><text x="100.0305%" y="303.50"></text></g><g><title>_int_free (40 samples, 0.01%)</title><rect x="99.8215%" y="277" width="0.0124%" height="15" fill="rgb(216,46,15)" fg:x="321489" fg:w="40"/><text x="100.0715%" y="287.50"></text></g><g><title>rucene::core::index::writer::index_writer::IndexWriterInner&lt;D,C,MS,MP&gt;::get_reader (64 samples, 0.02%)</title><rect x="99.8354%" y="293" width="0.0199%" height="15" fill="rgb(250,74,19)" fg:x="321534" fg:w="64"/><text x="100.0854%" y="303.50"></text></g><g><title>rucene::core::index::reader::directory_reader::StandardDirectoryReader&lt;D,C,MS,MP&gt;::open_by_writer (64 samples, 0.02%)</title><rect x="99.8354%" y="277" width="0.0199%" height="15" fill="rgb(249,42,33)" fg:x="321534" fg:w="64"/><text x="100.0854%" y="287.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdates&lt;D,C,MS,MP&gt;::get_readonly_clone (64 samples, 0.02%)</title><rect x="99.8354%" y="261" width="0.0199%" height="15" fill="rgb(242,149,17)" fg:x="321534" fg:w="64"/><text x="100.0854%" y="271.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdatesInner&lt;D,C,MS,MP&gt;::get_readonly_clone (64 samples, 0.02%)</title><rect x="99.8354%" y="245" width="0.0199%" height="15" fill="rgb(244,29,21)" fg:x="321534" fg:w="64"/><text x="100.0854%" y="255.50"></text></g><g><title>rucene::core::index::writer::index_writer::ReadersAndUpdatesInner&lt;D,C,MS,MP&gt;::create_reader_if_not_exist (34 samples, 0.01%)</title><rect x="99.8448%" y="229" width="0.0106%" height="15" fill="rgb(220,130,37)" fg:x="321564" fg:w="34"/><text x="100.0948%" y="239.50"></text></g><g><title>rucene::core::index::reader::segment_reader::SegmentReader&lt;D,C&gt;::open (34 samples, 0.01%)</title><rect x="99.8448%" y="213" width="0.0106%" height="15" fill="rgb(211,67,2)" fg:x="321564" fg:w="34"/><text x="100.0948%" y="223.50"></text></g><g><title>__calloc (334 samples, 0.10%)</title><rect x="99.8752%" y="277" width="0.1037%" height="15" fill="rgb(235,68,52)" fg:x="321662" fg:w="334"/><text x="100.1252%" y="287.50"></text></g><g><title>_int_malloc (132 samples, 0.04%)</title><rect x="99.9379%" y="261" width="0.0410%" height="15" fill="rgb(246,142,3)" fg:x="321864" fg:w="132"/><text x="100.1879%" y="271.50"></text></g><g><title>__libc_start_main (1,989 samples, 0.62%)</title><rect x="99.3719%" y="389" width="0.6176%" height="15" fill="rgb(241,25,7)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="399.50"></text></g><g><title>main (1,989 samples, 0.62%)</title><rect x="99.3719%" y="373" width="0.6176%" height="15" fill="rgb(242,119,39)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="383.50"></text></g><g><title>std::rt::lang_start_internal (1,989 samples, 0.62%)</title><rect x="99.3719%" y="357" width="0.6176%" height="15" fill="rgb(241,98,45)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="367.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1,989 samples, 0.62%)</title><rect x="99.3719%" y="341" width="0.6176%" height="15" fill="rgb(254,28,30)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="351.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,989 samples, 0.62%)</title><rect x="99.3719%" y="325" width="0.6176%" height="15" fill="rgb(241,142,54)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="335.50"></text></g><g><title>basic_points_qps::main (1,989 samples, 0.62%)</title><rect x="99.3719%" y="309" width="0.6176%" height="15" fill="rgb(222,85,15)" fg:x="320041" fg:w="1989"/><text x="99.6219%" y="319.50"></text></g><g><title>rucene::core::search::query::point_range_query::LongPoint::pack (428 samples, 0.13%)</title><rect x="99.8566%" y="293" width="0.1329%" height="15" fill="rgb(210,85,47)" fg:x="321602" fg:w="428"/><text x="100.1066%" y="303.50"></text></g><g><title>_start (2,000 samples, 0.62%)</title><rect x="99.3697%" y="405" width="0.6210%" height="15" fill="rgb(224,206,25)" fg:x="320034" fg:w="2000"/><text x="99.6197%" y="415.50"></text></g><g><title>all (322,064 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(243,201,19)" fg:x="0" fg:w="322064"/><text x="0.2500%" y="447.50"></text></g><g><title>basic_points_qp (322,064 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="322064"/><text x="0.2500%" y="431.50">basic_points_qp</text></g></svg></svg>